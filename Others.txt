spring-boot-starter-security

spring-boot-starter-thymeleaf 

spring-boot-starter-logging

spring-boot-starter-freemarker



------------------NY Times News Rest API Consumer SPring APP-------------------------




package com.example.project;

import org.springframework.web.client.RestTemplate;
import org.json.JSONObject;
import org.springframework.http.HttpHeaders;
import org.springframework.http.MediaType;
import org.springframework.http.HttpEntity;
import org.springframework.http.ResponseEntity;
import org.springframework.http.HttpMethod;
import org.springframework.http.HttpStatus;
import java.util.Map;
import org.springframework.stereotype.Service;

@Service
public class NewsService {
	RestTemplate restTemplate;
	
	public News getTopStories() {
	    
	    restTemplate = new RestTemplate();
	    
	    News news = new News();
	    
		JSONObject topStories;

		String getUrl = "http://api.nytimes.com/svc/topstories/v2/home.json?api-key=d627f5e49045426285a9be68f9bb9e34";

		HttpHeaders headers = new HttpHeaders();

		headers.setContentType(MediaType.APPLICATION_JSON);

		HttpEntity<String> entity = new HttpEntity<String>(headers);

		ResponseEntity<Map> topStoriesList = restTemplate.exchange(getUrl, HttpMethod.GET, entity, Map.class);

		if (topStoriesList.getStatusCode() == HttpStatus.OK) {

			topStories = new JSONObject(topStoriesList.getBody());
			System.out.println(topStories);
			//
			

		}
        return news;
	}
}



package com.example.project;

import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.ResponseBody;

@RestController
@RequestMapping("/api/news/")
public class NewsController {

    @Autowired
    NewsService newsService;

    @RequestMapping("/topstories")
	public @ResponseBody News getNews() throws Exception{
	   return newsService.getTopStories();
	}
	
}


---------------------Spring REST BASIC Security---------------------

package com.example.project;

import org.springframework.context.annotation.*;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;

@Configuration
@EnableWebSecurity
public class SpringSecurityConfig extends WebSecurityConfigurerAdapter {

	@Autowired
	private AuthenticationEntryPoint authEntryPoint;


	protected void configure(HttpSecurity http) throws Exception {
		http.csrf().disable().authorizeRequests()
				.anyRequest().authenticated()
				.and().httpBasic()
				.authenticationEntryPoint(authEntryPoint);
	}

	@Autowired
	public void configureGlobal(AuthenticationManagerBuilder auth) throws Exception {
		auth.inMemoryAuthentication().withUser("username").password("password").roles("USER");
	}
}





package com.example.project;


import javax.servlet.http.*;
import org.springframework.security.web.authentication.www.*;
import org.springframework.security.core.*;
import java.io.*;
import javax.servlet.*;
import org.springframework.stereotype.*;

@Component
public class AuthenticationEntryPoint extends BasicAuthenticationEntryPoint {

@Override

    public void commence(HttpServletRequest request, HttpServletResponse response,
    AuthenticationException authEx)

      throws IOException, ServletException {

        response.addHeader("LoginUser", "Basic " + getRealmName());

        response.setStatus(HttpServletResponse.SC_UNAUTHORIZED);

        PrintWriter writer = response.getWriter();

        writer.println("HTTP Status 401 - " + authEx.getMessage());

    }

	

	@Override

    public void afterPropertiesSet() throws Exception {

        setRealmName("springboot");

        super.afterPropertiesSet();

    }

}



-----------------------------

